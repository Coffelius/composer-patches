{
    "3.36.0": {
        "feature": [
            "allow '@type bundle' to be used for bundle package instead of using somewhat cryptic '@package *'",
            "allow multiple types to be combined in embedded info (@type dev+bundle)"
        ],
        "fix": [
           "multi-line description not presented properly when using composer patch:list command",
           "bundled patches not included as expected when using embedded patch target info"
        ] 
    },
    "3.35.3": {
        "fix": [
            "backwards compatibility problems with composer.lock contents for projects that upgraded to latest releases of the plugin and had patches previously applied (boolean values for patches_applied no longer tolerated)"
        ]
    },
    "3.35.2": {
        "fix": [
            "lock management reworked (again) to make sure that under no circumstances does the plugin crash while sanitizing the lock"
        ]
    },
    "3.35.1": {
        "fix": [
            "lock management reworked to use built-in methods for locating a package to avoid issues with potential aliases, etc"
        ]
    },
    "3.35.0": {
        "feature": [
            "list command added (allows listing all registered patches and their state)"
        ],
        "fix": [
            "bundled patch targets not properly reset when using patch:redo in case patches applied on packages, but installed.json reset to provide no information about applied patches",
            "patches for packages that are covered with certain bundle patch do not get re-applied when running patch:redo with filter (redo should not leave any patch uninstalled even when executed with a filter)"
        ]
    },
    "3.34.1": {
        "fix": [
            "conflicting project applied patches state when doing a --no-dev call and a filtered undo/redo after that"
        ]
    },
    "3.34.0": {
        "feature": [
            "allow patch path strip level to be defined in patch's embedded target-info declaration (@level <int>)"
        ],
        "fix": [
            "patches queue generator sometimes generated lists that did not queue proper re-applying of patches when dealing with bundles and indirect targets so that 'patch:redo' == 'patch:undo' + 'patch:apply'",
            "make sure that the removal od 'dev' bundle (or any other type with indirect targets) patches cause proper re-patching of related targets when running with --no-dev"
        ],
        "branch": "release/3.X"
    },
    "3.33.1": {
        "fix": [
            "improved error reporting when encountering issues on composer lock cleanup"
        ],
        "branch": "release/3.X"
    },
    "3.33.0": {
        "feature": [
            "allow patch applied root to be configured per patch to allow patching of files that are mapped by other composer plugins to project root (see more at 'Patches: custom applier cwd)'"
        ],
        "fix": [
            "switched away from using a class constant name that on older php versions is reserved (new)",
            "avoid reporting non-vcs package differences as reason for halting the patch applying (which requires package reset)",
            "full list of applied patches ended up in composer.lock (new: none added, not even 'true' flag)",
            "multiple dependencies on patches with embedded target info not respected"
        ],
        "branch": "release/3.X"
    },
    "3.32.1": {
        "fix": [
            "definition list validation command returning with false failures when using #skip on patch paths"
        ],
        "maintenance": [
            "removing #skip flag from path when encountered (previously it remained in the path)"
        ],
        "branch": "release/3.X"
    },
    "3.32.0": {
        "feature": [
            "allow comments on any level and with any keyword as long as it starts with underscore (_)"
        ],
        "branch": "release/3.X"
    },
    "3.31.0": {
        "feature": [
            "halt applying patches when encountering package with local changes to avoid developer from losing their work (allow override with env flag or command --force flag)"
        ],
        "branch": "release/3.X"
    },
    "3.30.1": {
        "fix": [
            "patch apply failure on fresh projects under certain conditions when loading the 'patches-applied' from .lock file (which in-between the run is set to 'true')",
            "skip initiating the patches in case composer update is only targeting composer.lock (running update with --lock) and not really installing/updating any modules"
        ]
    },
    "3.30.0": {
        "feature": [
            "allow @type tag in embedded target info to indicate that patch should only be applied when running composer without --no-dev"
        ],
        "fix": [
            "patch:redo not re-applying patches correctly for targeted package when empty patch list provided (in situations where previously patches were applied)",
            "when testing bundled packages with --filter, consider all bundle patch targets as full reset candidates (used to produce inconsistent behaviour)"
        ]
    },
    "3.29.1": {
        "fix": [
            "patch validation command failing on bundle patches when owned by non-root package"
        ]
    },
    "3.29.0": {
        "feature": [
            "split the --undo and --redo options of main command into separate commands - 'patch:undo' and 'patch:redo' (the functionality will still also be accessible via flags of 'composer patch')",
            "create alias command for 'composer patch' to have all commands available under the keyword 'patch' - patch:apply ('composer patch' still works as well though)",
            "added 'patch:validate' to make sure that there are no patches in owner repo that miss proper target definition (has been a real issue when re-arranging code in some projects)",
            "allow one-line embedded definition via @package tag the same way it's possible with @version",
            "added aliases for @package - @target, @module",
            "added alias for @version - @constraint"
        ],
        "fix": [
            "ticket info never displayed for patch with embedded info, even when @ticket set"
        ],
        "maintenance": [
            "change towards not passing composer instance into functions and using it as dependency instead",
            "make it possible to manipulate composer loader work by toggling or replacing loader components"
        ]
    },
    "3.28.1": {
        "fix": [
            "patch link/issue moved to be presented after the label/description"
        ]
    },
    "3.28.0": {
        "feature": [
            "allow patches information to be extracted from the patch file (see: patch declaration with embedded meta-data)",
            "allow comments to be added to patch declaration files by using '_comment' prefix on main level of declaration",
            "show more detailed reason for re-applying a patch: NEW, when new; CHANGED, when file is not new, but contents changed"
        ],
        "fix": [
            "using patches files on project level or for root repository did not resolve their paths correctly",
            "undo having confusing semantic meaning when used. targeting a specific package now always just targets the package, path filter gets negated on undo command",
            "work towards restoring compatibility with 5.3"
        ]
    },
    "3.27.0": {
        "feature": [
            "allow multiple 'patches-depend' declarations for different kind of patches (bundle VS normal patch)",
            "allow wildcards to be used in target names when defining multiple patches-depends items"
        ]
    },
    "3.26.0": {
        "feature": [
            "allow multiple patch-base's to be defined based on vendor or full package name"
        ]
    },
    "3.25.3": {
        "fix": [
            "missing file added"
        ]
    },
    "3.25.2": {
        "fix": [
            "array-based values ended up being treated as version constraints (issue with label-version exploder)"
        ]
    },
    "3.25.1": {
        "fix": [
            "label-version definition exploder not handling a list of multiple versions correctly"
        ]
    },
    "3.25.0": {
        "feature": [
            "new definition format that consists of description/filename and version restriction",
            "allow label to be used as file-name (defined in base-path pattern as {{label}} or {{label-value}})",
            "allow items without mutations (like {{label}}) to have strip-rules defined against them",
            "don't display label when file name is directly part of the label"
        ],
        "fix": [
            "bad data type returned when base-path pattern defined and certain parts of the name did not match with any value-strip rule",
            "skip flag not correctly moved to the end of the path when using patches-base configuration",
            "don't append the base-path pattern with custom extras and expect users to take charge of making sure that the file name is part of the path",
            "trim whitespace, slash, colon when patch source starts with space"
        ]
    },
    "3.24.1": {
        "maintenance": [
            "debug code removed (shame)"
        ]
    },
    "3.24.0": {
        "feature": [
            "allow patch base path variables to have partial value extractors defined against them",
            "use 0.0.0 version variable value when base-path definition includes version in it",
            "include new base path variable: {{file-name}} (name derived from label) and {{file}} (name used from source as is)",
            "allow file name to be resolved from patch label (when source not defined)"
        ],
        "fix": [
            "wrong variable name used at patcher config normalizer component that caused a crash when 'config' used for patch definition"
        ],
        "maintenance": [
            "composer lock removed; readme mic statistics badges added"
        ]
    },
    "3.23.5": {
        "fix": [
            "wrong error message when bundle patch is not found from defined path"
        ]
    },
    "3.23.4": {
        "maintenance": [
            "minor modifications to patch filtering logic"
        ]
    },
    "3.23.3": {
        "fix": [
            "fix to a crash that happened when resetting targets that relate to bundle patches"
        ],
        "maintenance": [
            "definition normalizer split into separate components",
            "patch applier partially split into smaller components"
        ]
    },
    "3.23.2": {
        "fix": [
            "minor change to constant naming to make it match up with patch command. COMPOSER_PATCHES_PREFER_OWNER renamed to COMPOSER_PATCHES_FROM_SOURCE. Backwards compatible",
            "re-installed packages (when resetting patches) not being re-deployed when using 'patch' command (resulting in incorrect app behaviour due to some old files being still used)"
        ],
        "maintenance": [
            "log messages updated to include applied patch count when resetting package",
            "showing [NEW] flag when re-applying patches for a package and patch file was previously not applied"
        ]
    },
    "3.23.1": {
        "fix": [
            "bundled patches reset mechanism targeting wrong packages (where root package as owner was being sent to 'patches reset' which caused a crash)"
        ]
    },
    "3.23.0": {
        "feature": [
            "allow default indirect dependency to be defined for a package version restriction",
            "allow base patch to be defined for widgets - including variable conversion for vendor, module name and version",
            "introduced new definition pattern to be used together with patches-base and base patch variables: version ranges"
        ],
        "fix": [
            "renamed constants that conflicted with constant names that were reserved in PHP5.3.X"
        ]
    },
    "3.22.4": {
        "maintenance": [
            "package meta-data fixes. syntax error in composer.json"
        ]
    },
    "3.22.3": {
        "fix": [
            "incorrect re-applying of bundle patch after 'patch' command had been used to exclude it or when single bundle patch was explicitly targeted",
            "package not reset when using --filter (without --redo), even when targeted patches were a subset of what was applied",
            "the --filter flag not properly respected when running 'patch' command with --undo"
        ]
    },
    "3.22.2": {
        "fix": [
            "bundled patch targets resolver failing due to patch info loaders being re-arranged and certain array values no longer being available (patch path not available as array keys)"
        ]
    },
    "3.22.1": {
        "fix": [
            "minor architecture changes around filtering patch files / packages"
        ]
    },
    "3.22.0": {
        "feature": [
            "allow patch exclusions based on partial paths",
            "renamed 'excluded-patches' to 'patches-exclude' to follow similar naming convention through-out the configuration for the plugin. Backwards compatible"
        ],
        "fix": [
            "patch exclusion failed to kick in due to bad configuration pass-down from factory to the component that is responsible for the exclusion"
        ]
    },
    "3.21.0": {
        "feature": [
            "patcher configuration overrides that depend on the OS",
            "topological sorting on patches to allow sequencing even when patches not defined by same owner or defined in different patch-list files",
            "allow fuzzy package name targeting with 'patch' command"
        ],
        "fix": [
            "the --filter argument to work similarly to how package filter narrows down on what is being targeted"
        ]
    },
    "3.20.0": {
        "feature": [
            "make it possible to allow patch download from HTTP (separate config from allowing this for packages)"
        ],
        "fix": [
            "fail early when some of the remote patches fail to download (only for patches that are actually required)",
            "make sure that same patch file is not downloaded twice (might happen with bundled patches)"
        ]
    },
    "3.19.5": {
        "fix": [
            "re-apply remote patch when it's contents have changed (download remote patches beforehand and make the decision based on the contents of the patch)",
            "remote patches treated as if they're local patch files"
        ],
        "maintenance": [
            "moved patch downloading to be done before any patches are applied",
            "documentation simplified. Using comments in examples to explain what certain config does"
        ]
    },
    "3.19.4": {
        "maintenance": [
            "documentation re-organized and simplified"
        ]
    },
    "3.19.3": {
        "maintenance": [
            "minor readme and package description updates"
        ]
    },
    "3.19.2": {
        "maintenance": [
            "documentation changes. Some explanations re-written. Added example for bundle-patch"
        ]
    },
    "3.19.1": {
        "maintenance": [
            "documentation re-organized to prioritize quick comprehension on the basics of the module's functionality",
            "minor code restyle changes"
        ]
    },
    "3.19.0": {
        "feature": [
            "added new operation to check if applier is available (can be used to exclude certain appliers on certain systems)",
            "added new operation to find applier's executable and use it in the operations that come afterwards",
            "allow multiple commands per operation",
            "introduced the possibility to define an operation that is considered a success when the command does not succeed"
        ],
        "fix": [
            "removed references to $this within closures (as it's not supported in 5.3.X)"
        ]
    },
    "3.18.0": {
        "feature": [
            "several config keys renamed (patchers => appliers, patcher-config => patcher). Backwards compatible",
            "patch enabling moved under patcher/sources (project:bool, packages:bool|array, vendors:bool|array). Backwards compatible",
            "allow granular patch sources inclusion (so that only some vendors would be included)",
            "allow some providers to have special extra operations (before this change, every applier was expected to have every listed operation declared)"
        ]
    },
    "3.17.3": {
        "fix": [
            "switched to using PHP constants for OS-related values like newline and path separator"
        ],
        "maintenance": [
            "switched to using constants for each free-text array key value + reduced code repetition",
            "logger indentation reworked not to be hardcoded in log messages in text form to open up the chance to switch to different logging methods/formats in the future"
        ]
    },
    "3.17.2": {
        "fix": [
            "patches not registered for patch target packages when 'COMPOSER_PATCHES_FATAL_FAIL' enabled and error is encountered"
        ]
    },
    "3.17.1": {
        "fix": [
            "composer patch command option 'undo' not working correctly when patching explicitly set to be enabled in composer.json of the project",
            "composer patch command option 'redo' not working correctly when patching explicitly set to be enabled in composer.json of the project",
            "using 'undo' and 'redo' together still triggers 'undo' functionality"
        ]
    },
    "3.17.0": {
        "fix": [
            "don't force bundle patches to have 'vendor' in their paths as it's a customizable value",
            "patch information not correctly restored to installed.json when there were no patch updates while running 'composer update'"
        ],
        "maintenance": [
            "code split into smaller classes where applicable to move towards single-responsibility entities in design",
            "reduced the mess around re-using same terminology in too many different contexts"
        ]
    },
    "3.16.0": {
        "feature": [
            "auto-resolve bundle patch targets when 'targets' not defined",
            "multiple filters for patch command",
            "allow patch command path filter to have wildcards and negation"
        ],
        "fix": [
            "ignore custom 'targets' config for non-bundled patches",
            "bundled patch was not registering/resetting target packages when performing redo/undo",
            "patches-dev and patches-file not enabling patching by default when defined on project level",
            "having patcher enabled only on project level did not compile patch queue correctly when disabling the option of including patches from packages"
        ]
    },
    "3.15.0": {
        "feature": [
            "allow multiple patch files to be defined to enable high-level patch grouping (or to allow occasional cleanup where really old legacy patches could be moved elsewhere)"
        ],
        "fix": [
            "patch files not loaded from relative path even when they belong to a package rather than being referred directly from the project"
        ]
    },
    "3.14.1": {
        "fix": [
            "crash when trying to declare path stripping level for version-branched sources"
        ]
    },
    "3.14.0": {
        "feature": [
            "allow certain patches to be processed only with very strict path strip options and patcher type",
            "changed patcher definition template to use variable markup rather than relying on sprintf patterns which dictates the variables in the template to be defined in certain order",
            "allow extra operations to be defined or the sequence of existing ones to be changed"
        ],
        "fix": [
            "made sure that no compact array markup is used within the plugin"
        ],
        "maintenance": [
            "changed the 'validate' in patcher configuration key to 'check'. Support for 'validate' kept"
        ]
    },
    "3.13.2": {
        "fix": [
            "updated lock to latest due to composer validate error"
        ]
    },
    "3.13.1": {
        "fix": [
            "roll-back with 'undo' to reset package when used with specific targets"
        ]
    },
    "3.13.0": {
        "feature": [
            "option to apply only some of the patches based on text-based file name filter",
            "added an option for the user to have control over the sequence of the patchers"
        ],
        "fix": [
            "patch path strip levels re-ordered to go sequentially from 0 to 2 to allow first run to be with 'as is' path",
            "changed patch applier logic to test different patchers with same level rather than going through all patches with levels in sequence",
            "preferring standard patcher instead of starting with GIT",
            "patches not being reset when removing all patches from patch provider in vendor folder and running '--from-source --redo my/package'"
        ]
    },
    "3.12.1": {
        "feature": [
            "renamed 'reset' to 'redo' to make the command argument's purpose easier to understand when compared with 'redo'"
        ],
        "fix": [
            "properly re-apply all patches when using 'from-source' nad 'redo' arguments together"
        ]
    },
    "3.12.0": {
        "feature": [
            "introduced a new composer command to make it easier to re-apply all patches and give newly defined patches a quick test-run (composer patch)"
        ]
    },
    "3.11.0": {
        "feature": [
            "reset all patched packages when vaimo/composer-patches in removed from a project (with an option of leaving the patches applied)",
            "added the possibility for a project to define custom patch appliers or override the ones that are built into the package (see: Patcher Configuration)"
        ],
        "fix": [
            "avoid crashing at the end of a composer operation when vaimo/composer-patches was removed while it was executing, but it's plugin class remains loaded and triggers an action after all install/uninstall actions are done"
        ]
    },
    "3.10.4": {
        "fix": [
            "changes to package meta-data"
        ]
    },
    "3.10.3": {
        "fix": [
            "crash due to 'missing array key' that's caused by bad comparison in code when using only 'depends' on certain patch declarations"
        ]
    },
    "3.10.2": {
        "fix": [
            "declaration of 'depends' was overriding 'version'. Constraints defined on those keys are now merged",
            "patch applied when single version constraint was matched even when multiple ones defined"
        ]
    },
    "3.10.1": {
        "maintenance": [
            "changes to package metadata"
        ]
    },
    "3.10.0": {
        "feature": [
            "environment variable names standardized (old names still supported)"
        ],
        "fix": [
            "patches not re-applied when package is upgraded (old 'applied_patches' incorrectly restored instead)",
            "root package ignored when using COMPOSER_PATCHES_PREFER_OWNER"
        ],
        "maintenance": [
            "code re-organized to centralize the access to env flags"
        ]
    },
    "3.9.0": {
        "feature": [
            "added new environment flag to force patcher to extract the patch info from vendor folder instead of using the information from installed.json (mainly for patch maintenance)"
        ]
    },
    "3.8.1": {
        "fix": [
            "process every source path and check for 'skip' flag. In certain cases, the source-path flag was ignored"
        ]
    },
    "3.8.0": {
        "feature": [
            "allow patches to be skipped by adding 'skip' flag in it's definition (good as maintenance flags when doing major base-framework upgrades)"
        ],
        "fix": [
            "excluded patches required develop to specify patch owner vendor path instead of just the path that was relative to the patch owner folder"
        ]
    },
    "3.7.1": {
        "maintenance": [
            "code cleanup (some debugging code removed)"
        ]
    },
    "3.7.0": {
        "feature": [
            "added version branching for sequenced items",
            "added simplified version branching format where json object key is constraint and value the source"
        ]
    },
    "3.6.0": {
        "feature": [
            "allow multiple patch files to be declared under same label (see: Version branching)",
            "allow certain patches for packages to be excluded (see: Environment variables)"
        ],
        "fix": [
            "restored backwards compatibility with PHP versions that do not support new new array markup"
        ]
    },
    "3.5.2": {
        "fix": [
            "make sure that path normalizer does not touch root-level patch declarations"
        ]
    },
    "3.5.1": {
        "fix": [
            "make sure that 'resetting patched package' is not shown when package is indirectly targeted"
        ]
    },
    "3.5.0": {
        "feature": [
            "allow bundled patches (that target multiple packages) to be declared, tracked, reverted correctly when changed or removed (see: Bundled patches)"
        ]
    },
    "3.4.0": {
        "feature": [
            "allow dev-only patches to be declared (see: Development patches)"
        ]
    }
}
