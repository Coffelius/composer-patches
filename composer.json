{
    "name": "vaimo/composer-patches",
    "type": "composer-plugin",
    "license": "MIT",
    "description": "Applies a patch from a local or remote file to any package that is part of a given composer project. Packages can be defined both on project and on package level. Includes the possibility of re-configuring the commands that are used to apply the patches.",
    "authors": [
        {
            "name": "Allan Paiste",
            "email": "allan.paiste@vaimo.com"
        }
    ],
    "require": {
        "php": ">=5.3.0",
        "composer-plugin-api": "^1.0",
        "tivie/php-os-detector": "^1.0",
        "marcj/topsort": "^1.0"
    },
    "support": {
        "source": "https://github.com/vaimo/composer-patches",
        "docs": "https://github.com/vaimo/composer-patches",
        "issues": "https://github.com/vaimo/composer-patches/issues"
    }, 
    "keywords": [
        "composer plugin", 
        "os-specific config",
        "configurable patch applier",
        "patching", 
        "version restriction", 
        "indirect restrictions", 
        "patch description", 
        "remote patch files", 
        "downloaded patches", 
        "package bug-fix", 
        "package patches", 
        "patch exclusion", 
        "development patches", 
        "hot-fixes", 
        "back-ports",
        "environment flags", 
        "skipped packages", 
        "patch skipping", 
        "maintenance tools", 
        "multiple formats", 
        "patch branching", 
        "multi-version patches",
        "bundled patches",
        "patch command",
        "patch from vendor",
        "utilities"
    ],
    "minimum-stability": "dev",      
    "extra": {
        "class": "Vaimo\\ComposerPatches\\Plugin",
        "patcher_plugin": true,
        "changelog": {
            "3.23.3-rc": {
                "maintenance": [
                    "definition normalizer split into separate components",
                    "patch applier partially split into smaller components"
                ]
            },
            "3.23.2": {
                "fix": [
                    "minor change to constant naming to make it match up with patch command. COMPOSER_PATCHES_PREFER_OWNER renamed to COMPOSER_PATCHES_FROM_SOURCE. Backwards compatible",
                    "re-installed packages (when resetting patches) not being re-deployed when using 'patch' command (resulting in incorrect app behaviour due to some old files being still used)"
                ],
                "maintenance": [
                    "log messages updated to include applied patch count when resetting package",
                    "showing [NEW] flag when re-applying patches for a package and patch file was previously not applied"
                ]
            },
            "3.23.1": {
                "fix": [
                    "bundled patches reset mechanism targeting wrong packages (where root package as owner was being sent to 'patches reset' which caused a crash)"
                ]
            },
            "3.23.0": {
                "feature": [
                    "allow default indirect dependency to be defined for a package version restriction",
                    "allow base patch to be defined for widgets - including variable conversion for vendor, module name and version",
                    "introduced new definition pattern to be used together with patches-base and base patch variables: version ranges"
                ], 
                "fix": [
                    "renamed constants that conflicted with constant names that were reserved in PHP5.3.X"
                ]
            },
            "3.22.4": {
                "maintenance": [
                    "package meta-data fixes. syntax error in composer.json"
                ]
            },
            "3.22.3": {
                "fix": [
                    "incorrect re-applying of bundle patch after 'patch' command had been used to exclude it or when single bundle patch was explicitly targeted",
                    "package not reset when using --filter (without --redo), even when targeted patches were a subset of what was applied",
                    "the --filter flag not properly respected when running 'patch' command with --undo"
                ]
            },
            "3.22.2": {
                "fix": [
                    " bundled patch targets resolver failing due to patch info loaders being re-arranged and certain array values no longer being available (patch path not available as array keys)"
                ]
            },
            "3.22.1": {
                "fix": [
                    "minor architecture changes around filtering patch files / packages"
                ]
            },
            "3.22.0": {
                "feature": [
                    "allow patch exclusions based on partial paths",
                    "renamed 'excluded-patches' to 'patches-exclude' to follow similar naming convention through-out the configuration for the plugin. Backwards compatible"
                ],
                "fix": [
                    "patch exclusion failed to kick in due to bad configuration pass-down from factory to the component that is responsible for the exclusion"
                ]
            },
            "3.21.0": {
                "feature": [
                    "patcher configuration overrides that depend on the OS",
                    "topological sorting on patches to allow sequencing even when patches not defined by same owner or defined in different patch-list files",
                    "allow fuzzy package name targeting with 'patch' command"
                ],
                "fix": [
                    "the --filter argument to work similarly to how package filter narrows down on what is being targeted"
                ]
            },
            "3.20.0": {
                "feature": [
                    "make it possible to allow patch download from HTTP (separate config from allowing this for packages)"
                ],
                "fix": [
                    "fail early when some of the remote patches fail to download (only for patches that are actually required)",
                    "make sure that same patch file is not downloaded twice (might happen with bundled patches)"
                ]
            },
            "3.19.5": {
                "fix": [
                    "re-apply remote patch when it's contents have changed (download remote patches beforehand and make the decision based on the contents of the patch)",
                    "remote patches treated as if they're local patch files"
                ],
                "maintenance": [
                    "moved patch downloading to be done before any patches are applied",
                    "documentation simplified. Using comments in examples to explain what certain config does"
                ]
            },
            "3.19.4": {
                "maintenance": [
                    "documentation re-organized and simplified"
                ]
            },
            "3.19.3": {
                "maintenance": [
                    "minor readme and package description updates"
                ]
            },
            "3.19.2": {
                "maintenance": [
                    "documentation changes. Some explanations re-written. Added example for bundle-patch"
                ]
            },
            "3.19.1": {
                "maintenance": [
                    "documentation re-organized to prioritize quick comprehension on the basics of the module's functionality",
                    "minor code restyle changes"
                ]
            },
            "3.19.0": {
                "feature": [
                    "added new operation to check if applier is available (can be used to exclude certain appliers on certain systems)",
                    "added new operation to find applier's executable and use it in the operations that come afterwards",
                    "allow multiple commands per operation",
                    "introduced the possibility to define an operation that is considered a success when the command does not succeed"
                ],
                "fix": [
                    "removed references to $this within closures (as it's not supported in 5.3.X)"
                ]
            },
            "3.18.0": {
                "feature": [
                    "several config keys renamed (patchers => appliers, patcher-config => patcher). Backwards compatible",
                    "patch enabling moved under patcher/sources (project:bool, packages:bool|array, vendors:bool|array). Backwards compatible",
                    "allow granular patch sources inclusion (so that only some vendors would be included)",
                    "allow some providers to have special extra operations (before this change, every applier was expected to have every listed operation declared)"
                ]
            },
            "3.17.3": {
                "fix": [
                    "switched to using PHP constants for OS-related values like newline and path separator"
                ],
                "maintenance": [
                    "switched to using constants for each free-text array key value + reduced code repetition",
                    "logger indentation reworked not to be hardcoded in log messages in text form to open up the chance to switch to different logging methods/formats in the future"
                ]
            },
            "3.17.2": {
                "fix": [
                    "patches not registered for patch target packages when 'COMPOSER_PATCHES_FATAL_FAIL' enabled and error is encountered"
                ]
            },
            "3.17.1": {
                "fix": [
                    "composer patch command option 'undo' not working correctly when patching explicitly set to be enabled in composer.json of the project",
                    "composer patch command option 'redo' not working correctly when patching explicitly set to be enabled in composer.json of the project",
                    "using 'undo' and 'redo' together still triggers 'undo' functionality"
                ]
            },
            "3.17.0": {
                "fix": [
                    "don't force bundle patches to have 'vendor' in their paths as it's a customizable value",
                    "patch information not correctly restored to installed.json when there were no patch updates while running 'composer update'"
                ],
                "maintenance": [
                    "code split into smaller classes where applicable to move towards single-responsibility entities in design",
                    "reduced the mess around re-using same terminology in too many different contexts"
                ]
            },
            "3.16.0": {
                "feature": [
                    "auto-resolve bundle patch targets when 'targets' not defined",
                    "multiple filters for patch command",
                    "allow patch command path filter to have wildcards and negation"
                ],
                "fix": [
                    "ignore custom 'targets' config for non-bundled patches",
                    "bundled patch was not registering/resetting target packages when performing redo/undo",
                    "patches-dev and patches-file not enabling patching by default when defined on project level",
                    "having patcher enabled only on project level did not compile patch queue correctly when disabling the option of including patches from packages"
                ]
            },
            "3.15.0": {
                "feature": [
                    "allow multiple patch files to be defined to enable high-level patch grouping (or to allow occasional cleanup where really old legacy patches could be moved elsewhere)"
                ],
                "fix": [
                    "patch files not loaded from relative path even when they belong to a package rather than being referred directly from the project"
                ]
            },
            "3.14.1": {
                "fix": [
                    "crash when trying to declare path stripping level for version-branched sources"
                ]
            },
            "3.14.0": {
                "feature": [
                    "allow certain patches to be processed only with very strict path strip options and patcher type",
                    "changed patcher definition template to use variable markup rather than relying on sprintf patterns which dictates the variables in the template to be defined in certain order",
                    "allow extra operations to be defined or the sequence of existing ones to be changed"
                ],
                "fix": [
                    "made sure that no compact array markup is used within the plugin"
                ],
                "maintenance": [
                    "changed the 'validate' in patcher configuration key to 'check'. Support for 'validate' kept"
                ]
            },
            "3.13.2": {
                "fix": [
                    "updated lock to latest due to composer validate error"
                ]
            },
            "3.13.1": {
                "fix": [
                    "roll-back with 'undo' to reset package when used with specific targets"
                ]
            },
            "3.13.0": {
                "feature": [
                    "option to apply only some of the patches based on text-based file name filter",
                    "added an option for the user to have control over the sequence of the patchers"
                ],
                "fix": [
                    "patch path strip levels re-ordered to go sequentially from 0 to 2 to allow first run to be with 'as is' path",
                    "changed patch applier logic to test different patchers with same level rather than going through all patches with levels in sequence",
                    "preferring standard patcher instead of starting with GIT",
                    "patches not being reset when removing all patches from patch provider in vendor folder and running '--from-source --redo my/package'"
                ]
            },
            "3.12.1": {
                "feature": [
                    "renamed 'reset' to 'redo' to make the command argument's purpose easier to understand when compared with 'redo'"
                ],
                "fix": [
                    "properly re-apply all patches when using 'from-source' nad 'redo' arguments together"
                ]
            },
            "3.12.0": {
                "feature": [
                    "introduced a new composer command to make it easier to re-apply all patches and give newly defined patches a quick test-run (composer patch)"
                ]
            },
            "3.11.0": {
                "feature": [
                    "reset all patched packages when vaimo/composer-patches in removed from a project (with an option of leaving the patches applied)",
                    "added the possibility for a project to define custom patch appliers or override the ones that are built into the package (see: Patcher Configuration)"
                ],
                "fix": [
                    "avoid crashing at the end of a composer operation when vaimo/composer-patches was removed while it was executing, but it's plugin class remains loaded and triggers an action after all install/uninstall actions are done"
                ]
            },
            "3.10.4": {
                "fix": [
                    "changes to package meta-data"
                ]
            },
            "3.10.3": {
                "fix": [
                    "crash due to 'missing array key' that's caused by bad comparison in code when using only 'depends' on certain patch declarations"
                ]
            },
            "3.10.2": {
                "fix": [
                    "declaration of 'depends' was overriding 'version'. Constraints defined on those keys are now merged",
                    "patch applied when single version constraint was matched even when multiple ones defined"
                ]
            },
            "3.10.1": {
                "maintenance": [
                    "changes to package metadata"
                ]
            },
            "3.10.0": {
                "feature": [
                    "environment variable names standardized (old names still supported)"
                ],
                "fix": [
                    "patches not re-applied when package is upgraded (old 'applied_patches' incorrectly restored instead)",
                    "root package ignored when using COMPOSER_PATCHES_PREFER_OWNER"
                ],
                "maintenance": [
                    "code re-organized to centralize the access to env flags"
                ]
            },
            "3.9.0": {
                "feature": [
                    "added new environment flag to force patcher to extract the patch info from vendor folder instead of using the information from installed.json (mainly for patch maintenance)"
                ]
            },
            "3.8.1": {
                "fix": [
                    "process every source path and check for 'skip' flag. In certain cases, the source-path flag was ignored"
                ]
            },
            "3.8.0": {
                "feature": [
                    "allow patches to be skipped by adding 'skip' flag in it's definition (good as maintenance flags when doing major base-framework upgrades)"
                ],
                "fix": [
                    "excluded patches required develop to specify patch owner vendor path instead of just the path that was relative to the patch owner folder"
                ]
            },
            "3.7.1": {
                "maintenance": [
                    "code cleanup (some debugging code removed)"
                ]
            },
            "3.7.0": {
                "feature": [
                    "added version branching for sequenced items",
                    "added simplified version branching format where json object key is constraint and value the source"
                ]
            },
            "3.6.0": {
                "feature": [
                    "allow multiple patch files to be declared under same label (see: Version branching)",
                    "allow certain patches for packages to be excluded (see: Environment variables)"
                ],
                "fix": [
                    "restored backwards compatibility with PHP versions that do not support new new array markup"
                ]
            },
            "3.5.2": {
                "fix": [
                    "make sure that path normalizer does not touch root-level patch declarations"
                ]
            },
            "3.5.1": {
                "fix": [
                    "make sure that 'resetting patched package' is not shown when package is indirectly targeted"
                ]
            },
            "3.5.0": {
                "feature": [
                    "allow bundled patches (that target multiple packages) to be declared, tracked, reverted correctly when changed or removed (see: Bundled patches)"
                ]
            },
            "3.4.0": {
                "feature": [
                    "allow dev-only patches to be declared (see: Development patches)"
                ]
            }
        }
    },
    "autoload": {
        "psr-4": {
            "Vaimo\\ComposerPatches\\": "src"
        }
    }
}
